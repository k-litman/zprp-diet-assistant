name: Build and deploy
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:
    inputs:
      purpose:
        description: 'The purpose of manual trigger'
        required: true
        default: 'Lack of changes in the code, but needs to have a new image!'

permissions:
  contents: write
  packages: write

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Copy env
        working-directory: backend
        run: |
          cp .env.template .env
      - name: Lint check
        working-directory: backend
        run: |
          ./manage.sh lint
      - name: Run tests
        working-directory: backend
        run: |
          ./manage.sh ci-test
      - name: Validate OpenAPI schema
        working-directory: backend
        run: |
          ./manage.sh validate-spec
  build-backend:
    needs: test-backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/backend
          tags: |
            type=sha
      - name: Print metadata
        run: |
          echo "${{ steps.meta.outputs.tags }}"
          echo "${{ steps.meta.outputs.labels }}"
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/frontend
          tags: |
            type=sha
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Install dependencies
        working-directory: frontend
        run: yarn install
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            VITE_API_URL=https://api.zprp.fridaydeployment.com
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
  update-image-tags:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Update image tags in k8s
        run: |
          sed -i 's|image: ghcr.io/${{ github.repository }}/backend:.*|image: ${{ needs.build-backend.outputs.tags }}|' ./k8s/backend-deployment.yaml
          sed -i 's|image: ghcr.io/${{ github.repository }}/backend:.*|image: ${{ needs.build-backend.outputs.tags }}|' ./k8s/celeryworker-deployment.yaml
          sed -i 's|image: ghcr.io/${{ github.repository }}/backend:.*|image: ${{ needs.build-backend.outputs.tags }}|' ./k8s/celerybeat-deployment.yaml
          sed -i 's|image: ghcr.io/${{ github.repository }}/frontend:.*|image: ${{ needs.build-frontend.outputs.tags }}|' ./k8s/frontend-deployment.yaml
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add ./k8s/backend-deployment.yaml
          git add ./k8s/celeryworker-deployment.yaml
          git add ./k8s/celerybeat-deployment.yaml
          git add ./k8s/frontend-deployment.yaml
          git commit -m "Update image tags in k8s"
          git push
  deploy:
    needs: update-image-tags
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
      - name: Configure kubectl
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
      - name: Deploy
        uses: azure/k8s-deploy@v4
        with:
          namespace: 'diet-assistant'
          action: deploy
          strategy: basic
          manifests: |
            ./k8s/backend-deployment.yaml
            ./k8s/celeryworker-deployment.yaml
            ./k8s/celerybeat-deployment.yaml
            ./k8s/frontend-deployment.yaml
